// Класс "Греко-латинский квадрат

# if !defined GreekSquare_h
# define GreekSquare_h

# include "SquareCell.h"
# include "CellAddress.h"

class GreekSquare
{
public:
	static const int Rank = 7;			// Ранг греко-латинского квадрата

	GreekSquare();						// Конструктор по умолчанию
	void Initialize();					// Инициализация поиска
	void StartSearch();					// Запуск поиска

protected:
	SquareCell square[Rank][Rank];		// Матрица греко-латинского квадрата
	int squareA[Rank][Rank];			// Матрица латинского квадрата A
	int squareB[Rank][Rank];			// Матрица латинского квадрата B

	int squareCellHistory[Rank][Rank];	// Массив с индексами последнего использованного значения из словаря для клетки [i][j] = последнее из использованных значений

	int pDiagonalA[Rank];				// Массив флагов значений - [значение] = 1|0 (1 - используется / 0 - нет), задействованных в главной диагонали квадрата A 
	int sDiagonalA[Rank];				// Массив флагов значений - [значение] = 1|0 (1 - используется / 0 - нет), задействованных в побочной диагонали квадрата A
	int pDiagonalB[Rank];				// Массив флагов значений - [значение] = 1|0 (1 - используется / 0 - нет), задействованных в главной диагонали квадрата B
	int sDiagonalB[Rank];				// Массив флагов значений - [значение] = 1|0 (1 - используется / 0 - нет), задействованных в побочной диагонали квадрата B

	int rowValuesA[Rank][Rank];			// Массив флагов значений - [строка, значение] = 1|0 (1 - используется / 0 - нет), задействованных в строках квадрата A
	int rowValuesB[Rank][Rank];			// Массив флагов значений - [строка, значение] = 1|0 (1 - используется / 0 - нет), задействованных в строках квадрата B
	int columnValuesA[Rank][Rank];		// Массив флагов значений - [столбец, значение] = 1|0 (1 - используется / 0 - нет), задействованных в столбцах квадрата A
	int columnValuesB[Rank][Rank];		// Массив флагов значений - [столбец, значение] = 1|0 (1 - используется / 0 - нет), задействованных в столбцах квадрата B

	SquareCell dictionary[Rank*Rank];	// Словарь возможных значений клеток греко-латинского квадрата
	CellAddress path[Rank*Rank];		// Путь обхода клеток квадрата
	int dictionaryItemUsed[Rank*Rank];	// Массив флагов задействованных элементов словаря - [dictionaryId] = 1|0 (1 - используется / 0 - нет)

private:
	void SaveSquare();					// Запись найденного греко-латинского квадрата в файл

	int isInitialized;					// Флаг инициализированности поиска
	SquareCell* firstFreeItem;			// Первый свободный элемент
	SquareCell* lastFreeItem;			// Последний свободный элемент

	static const int WriteGreekSquare = 0;	// Флаг записи в файл результатов греко-латинского квадрата
};

# endif